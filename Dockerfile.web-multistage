# Environment to install flutter and build web
FROM debian:latest AS build-env

# install all needed stuff
RUN apt-get update
RUN apt-get install -y curl git unzip

# define variables
ARG FLUTTER_SDK=/usr/local/flutter
ARG FLUTTER_VERSION=3.29.2
ARG APP=/app/

#clone flutter
RUN git clone https://github.com/flutter/flutter.git $FLUTTER_SDK
# change dir to current flutter folder and make a checkout to the specific version
RUN cd $FLUTTER_SDK && git fetch && git checkout $FLUTTER_VERSION

# setup the flutter path as an environment variable
ENV PATH="$FLUTTER_SDK/bin:$FLUTTER_SDK/bin/cache/dart-sdk/bin:${PATH}"

# Start to run Flutter commands
# doctor to see if all was installed ok
RUN flutter doctor -v

# create folder to copy source code
RUN mkdir $APP
# copy source code to folder
COPY . $APP
# stup new folder as the working directory
WORKDIR $APP

# Run build: 1 - clean, 2 - pub get, 3 - build web
RUN flutter clean
RUN flutter pub get
RUN flutter build web

# once here the app will be compiled and ready to deploy

FROM node:14.7.0-alpine

WORKDIR /usr/src/app
COPY nodejs ./
RUN npm install
# RUN npm ci --only=production

# Set default values for API_HOSTNAME and API_PORT that can be overridden using build arguments
ARG API_HOSTNAME=localhost
ARG API_PORT=9998

ENV API_HOSTNAME=${API_HOSTNAME}
ENV API_PORT=${API_PORT}

# copy the info of the built web app to nginx
COPY --from=build-env /app/build/web ./public-flutter

# Copy the configuration script
COPY rewrite-config.js ./

# Rewrite the configuration file dynamically
RUN node rewrite-config.js

# Expose port
EXPOSE 3000
CMD [ "npm", "start" ]

